const en = {
  /* Landing page */
  open: 'Open',
  /* End Landing page */
  /* Project List */
  projectname: 'Project name',
  createddate: 'Created date',
  lastmodifieddate: 'Last modified date',
  rename: 'Rename',
  renameproject: 'Rename Project',
  /* End Project List */
  /* Modal */
  newproject: 'New project',
  importproject: 'Import Project',
  newwork: 'New Work',
  importwork: 'Import Work',
  save: 'Save',
  close: 'Close',
  description: 'Description',
  version: 'Version',
  yes: 'Yes',
  no: 'no',
  reset: 'Reset',
  warning: 'Warning',
  option: 'Option',
  choosefile: 'Choose file',
  projectimportedfilesize: 'File size should be less than 2MB.',
  areyousureyouwanttocontinue: 'Are you sure you want to continue?',
  renamework: 'Rename Work',
  cancel: 'Cancel',
  /* option modal */
  general: 'General',
  test: 'Test',
  check: 'Check',
  nodesize: 'Node size',
  linewidth: 'Line width',
  isrelation: 'Is Relation',
  notrelation: 'Not Relation',
  constraint: 'Constraint',
  threshold: 'Threshold',
  average: 'Average',
  weightedaverage: 'Weighted average',
  userdefined: 'User defined',
  sentencesimilaritycheck: 'Sentence similarity check',
  testcaseelicitationmethod: 'Test case elicitation method:',
  testdatatype: 'Test data type',
  viewommitedscenariosandtestcases: 'View ommited scenarios and test cases',
  usesentencesimilaritycheck: 'Use sentence similarity check',
  complexlogicalrelationtestcoverage: 'Complex logical relation test coverage',
  twosentencearenotsimilar: 'Two sentence are not similar',
  twosentencearesimilar: 'Two sentence are similar',
  similarity: 'Similarity',
  /* End option modal */
  /* End Modal */
  /* Workspace */
  project: 'Project',
  createnewwork: 'Create new work',
  changetosingleview: 'Change to single view',
  changetosplitview: 'Change to split view',
  unlockpanel: 'Unlock panel',
  lockpanel: 'Lock panel',
  resettodefaultlayout: 'Reset to default layout',
  testbasis: 'Test Basis',
  causeandeffecttable: 'Cause and Effect Table',
  ssmetric: 'SS Metric',
  testcoverage: 'Test Coverage',
  causeandeffectgraph: 'Cause and Effect Graph',
  testscenarioortestcase: 'Test Scenario/Case',
  testdata: 'Test Data',
  /* End Workspace */
  /* Account menu */
  viewaccount: 'View account',
  options: 'Options',
  logout: 'Logout',
  login: 'Login',
  register: 'Register',
  /* End Account menu */
  /* Project menu */
  search: 'Search',
  recents: 'Recents',
  recentprojects: 'Recent projects',
  recentworks: 'Recent works',
  work: 'Work',
  graph: 'Graph',
  testcase: 'Test Case',
  new: 'New',
  import: 'Import',
  export: 'Export',
  delete: 'Delete',
  explorer: 'Explorer',
  report: 'Report',
  methology: 'Methology',
  contractionhideorview: 'Contraction (Hide/View)',
  saveaspicture: 'Save as picture',
  graphoption: 'Graph option',
  align: 'Align',
  generate: 'Generate',
  causegroup: 'Cause group',
  effectgroup: 'Effect group',
  exclusive: 'Exclusive',
  inclusive: 'Inclusive',
  onlyandonlyone: 'Only and Only one',
  require: 'Require',
  mark: 'Mark',
  defaultsetup: 'Default setup',
  /* End Project menu */
  /* Cause effect table */
  id: 'Id',
  definition: 'Definition',
  abridged: 'Abridged',
  cannotaddanode: 'Cannot add a node.',
  samenode: 'A node with same content already exists.',
  addnodefailed: 'Add new Cause/Effect failed because network error.',
  networkerror: 'Network error',
  cannotremovemergedefinition: 'Can not remove merged definition.',
  errorwhendeletedefinition: 'An error occors when delete the item!',
  willbeleft: 'will be left.',
  similarelement: 'Similar element',
  elementstoadd: 'Elements to add',
  similarelementwasfound: 'A similar element was found. Would you like to abbreviate?',
  /* End Cause effect table */
  /* SS metric */
  brevity: 'Brevity',
  logiccombination: 'Logic Combination',
  connotation: 'Connotation',
  efferent: 'Efferent',
  afferent: 'Afferent',
  complexity: 'Complexity',
  samesoundambiguity: 'Same Sound Ambiguity',
  samemeaningambiguity: 'Same Meaning Ambiguity',
  orphannode: 'Orphan Node',
  arclevel: 'Arc Level',
  abridgedpercentage: 'Abridged Percentage',
  duplication: 'Duplication',
  /* End SS metric */
  /* Test coverage */
  planning: 'Planning',
  cause: 'Cause',
  causetestdata: 'Cause Test Data',
  effect: 'Effect',
  complexlogicalrelation: 'Complex Logical Relation',
  scenario: 'Scenario',
  basescenario: 'Base Scenario',
  validscenario: 'Valid Scenario',
  invalidscenario: 'Invalid Scenario',
  /* End Test coverage */
  /* Test scenario/case */
  select: 'Select',
  and: 'And',
  or: 'Or',
  base: 'Base',
  valid: 'Valid',
  apply: 'Apply',
  name: 'Name',
  expectedresults: 'Expected Results',
  /* End Test scenario/case */
  /* Test data */
  type: 'Type',
  intensity: 'Intensity',
  truedata: 'True Data',
  falsedata: 'False Data',
  error: 'Error',
  /* End Test data */
  /* Test basis panel */
  classifyascause: 'Classify as Cause',
  classifyaseffect: 'Classify as Effect',
  /* End Test basis panel */
  /* Graph panel */
  addgroup: 'Add Group',
  lockposition: 'Lock Position',
  unlockposition: 'Unlock Position',
  addexclusive: 'Add Exclusive',
  addinclusive: 'Add Inclusive',
  addoneandonlyone: 'Add One and Only One',
  addrequire: 'Add Require',
  addmask: 'Add Mask',
  /* Inspection */
  inspection: 'Inspection',
  disconnectednode: 'Error: Node is not connected to another node.',
  missingisrelation: 'Warning: Node does not have a true connection.',
  missingnotrelation: 'Warning: Node does not have a false connection.',
  hasrelationinsamegroup: 'Warning: Node is connected to the effect node in the same effect group.',
  econstraintviolation: 'Warning: Node has the connection that violates "Exclusive" constraint.',
  iconstraintviolation: 'Warning: Node has the connection that violates "Inclusive" constraint',
  oconstraintviolation: 'Warning: Node has the connection that violates "One and Only One" constraint.',
  rconstraintviolation: 'Warning: Node has the connection that violates "Require" constraint.',
  mconstraintviolation: 'Warning: Node has the connection that violates "Mask" constraint.',
  constraintviolation: 'Warning: Node has the connection that violates the constraint.',
  /* End Inspection */
  /* End Graph panel */
  /* Logout successfullly */
  yousuccessfullyloggedout: 'You successfully logged out!',
  thelogoutwasnotinitiated: 'The logout was not initiated from within the page.',
  thankyouforusingourwebsite: 'Thank you for using our website',
  haveaniceday: 'Have a nice day',
  processinglogout: 'Processing logout',
  processinglogoutcallback: 'Processing logout callback',
  alert: 'Alert',
  /* End Logout successfullly */
};

export default en;
